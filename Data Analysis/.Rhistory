truncData <- truncData[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline" | truncData$interface == "List Hover" | truncData$interface == "List Inline",]
truncData$category[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$category[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$hover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$hover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
View(truncData)
View(truncData)
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$category[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$category[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
View(truncData)
View(truncData)
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$isCategory[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$isCategory[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
linearModel <- lm(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModel)
summary(linearModel)
linearModelCategory <- lm(time ~ isCategory, data=truncData)
linearModelHover <- lm(time ~ isCategory + isHover, data=truncData)
linearModelGender <- lm(time ~ isCategory + isHover + gender, data=truncData)
linearModel <- lm(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModelCategory, linearModelHover, linearModelGender)
linearModelCategory <- lm(time ~ isCategory, data=truncData)
linearModelHover <- lm(time ~ isHover, data=truncData)
linearModelGender <- lm(time ~ gender, data=truncData)
linearModel <- lm(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModelCategory, linearModelHover, linearModelGender)
linearModelCategory <- lm(time ~ isCategory, data=truncData)
linearModelHover <- lm(time ~ isHover * isHover, data=truncData)
linearModelGender <- lm(time ~ isCategory * isHover * gender, data=truncData)
linearModel <- lm(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModelCategory, linearModelHover, linearModelGender)
anova(linearModel)
summary(linearModel)
plot(density(truncData$time))
intervals(linearModel)
library(Rcmdr)
intervals(linearModel)
linearModelCategory <- lm(time ~ isCategory, data=truncData)
linearModelHover <- lm(time ~ isHover, data=truncData)
linearModelGender <- lm(time ~ gender, data=truncData)
linearModel <- lm(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModelCategory, linearModelHover, linearModelGender, linearModel)
simpleLinearModel <- lm(time ~ 1, data=truncData)
linearModelCategory <- lm(time ~ isCategory, data=truncData)
linearModelHover <- lm(time ~ isHover, data=truncData)
linearModelGender <- lm(time ~ gender, data=truncData)
linearModel <- lm(time ~ isCategory * isHover * gender, data=truncData)
anova(simpleLinearModel, linearModelCategory, linearModelHover, linearModelGender, linearModel)
summary(linearModel)
truncData$isCategory <- factor(truncData$isCategory, levels=c(0:1), labels=c("No, Yes"))
truncData$isHover <- factor(truncData$isHover, levels=c(0:1), labels=c("No, Yes"))
View(truncData)
View(truncData)
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$isCategory[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$isCategory[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
truncData$isCategory <- factor(truncData$isCategory, levels=c(0:1), labels=c("No, Yes"))
truncData$isHover <- factor(truncData$isHover, levels=c(0:1), labels=c("No, Yes"))
simpleLinearModel <- lm(time ~ 1, data=truncData)
View(truncData)
View(truncData)
View(truncData)
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$isCategory[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$isCategory[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
View(truncData)
truncData$isCategory <- factor(truncData$isCategory, levels=c(0:1), labels=c("No", "Yes"))
truncData$isHover <- factor(truncData$isHover, levels=c(0:1), labels=c("No", "Yes"))
linearModel <- lm(time ~ isCategory * isHover * gender, data=truncData)
summary(linearModel)
anova(linearModel)
summary(linearModel)
randomInterceptSession <- lme(time ~ isCategory * isHover * gender,
data=csvData,
random = ~1|task,
method="ML",
control=list(opt="optim"))
library(nlme)
library(car) #Package includes Levene's test
library(gvlma)
randomInterceptSession <- lme(time ~ isCategory * isHover * gender,
data=csvData,
random = ~1|task,
method="ML",
control=list(opt="optim"))
randomInterceptSession <- lme(time ~ isCategory * isHover * gender,
data=truncData,
random = ~1|task,
method="ML",
control=list(opt="optim"))
anova(randomInterceptSession)
randomIntercept <- lme(time ~ 1, data=truncData,
random = ~1|task, method="ML",
control=list(opt="optim"))
anova(randomIntercept, randomInterceptSession)
anova(linearModel)
anova(linearModel)
View(truncData)
linearModel <- aov(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModel)
summary(linearModel)
View(csvData)
View(csvData)
truncData <- csvData[csvData$interface == "Cat Inline" | csvData$interface == "List Inline" | csvData$interface == "List w/ CatNames",]
View(truncData)
t.test(catNames, listInline)
catNames <- csvData[csvData$interface == "List w/ CatNames",]
listInline <- csvData[csvData$interface == "List Inline",]
t.test(catNames, listInline)
t.test(catNames$time, listInline$time)
ggplot(csvData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 50)
catNames <- csvData[csvData$interface == "List w/ CatNames",]
listInline <- csvData[csvData$interface == "List Inline",]
catInline <- csvData[csvData$interface == "Cat Inline",]
t.test(catNames$time, listInline$time)
t.test(catNames$time, catInline$time)
t.test(noCatNames$time, catHover$time)
noCatNames <- csvData[csvData$interface == "Cat w/o Names",]
catHover <- csvData[csvData$interface == "Cat Hover",]
t.test(noCatNames$time, catHover$time)
t.test(catNames$time, noCatNames$time)
t.test(noCatNames$time, listInline$time)
catBrowser <- csvData[csvData$interface == "Cat Browse",]
catBrowse <- csvData[csvData$interface == "Cat Browse",]
t.test(catBrowse$time, catInline$time)
t.test(catBrowse$time, catNames$time, paired = TRUE)
View(csvData)
View(csvData)
timePerTask <- aggregate(time ~ task)
timePerTaskList <- aggregate(time ~ task, data=categoryData)
categoryData <- csvData[csvData$interface == "Cat Inline" | csvData$interface == "Cat Hover" | csvData$interface == "Cat w/o Names" | csvData$interface == "Cat Browse"]
listData <- csvData[csvData$interface == "List Inline" | csvData$interface == "List Hover" | csvData$interface == "List w/ CatNames"]
categoryData <- csvData[csvData$interface == "Cat Inline" | csvData$interface == "Cat Hover" | csvData$interface == "Cat w/o Names" | csvData$interface == "Cat Browse"]
categoryData <- csvData[csvData$interface == "Cat Inline" | csvData$interface == "Cat Hover" | csvData$interface == "Cat w/o Names" | csvData$interface == "Cat Browse",]
listData <- csvData[csvData$interface == "List Inline" | csvData$interface == "List Hover" | csvData$interface == "List w/ CatNames",]
timePerTaskList <- aggregate(time ~ task, data=categoryData)
timePerTaskList <- aggregate(time ~ task, data=categoryData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task, data=listData, FUN=mean)
View(timePerTaskCategory)
View(timePerTaskList)
timePerTaskList$categoryTime = timePerTaskCategory$time;
timePerTaskList$categoryTime <- timePerTaskCategory$time;
timePerTaskList <- aggregate(time ~ task, data=categoryData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task, data=listData, FUN=mean)
timePerTaskList$categoryTime <- timePerTaskCategory$time
View(timePerTaskList)
timePerTaskList <- aggregate(time ~ task + interface, data=categoryData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task + interface, data=listData, FUN=mean)
View(timePerTaskCategory)
timePerTaskList <- aggregate(time ~ task * interface, data=categoryData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task * interface, data=listData, FUN=mean)
View(timePerTaskList)
timePerTaskList <- aggregate(time ~ task * interface, data=listData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task * interface, data=categoryData, FUN=mean)
categoryData <- csvData[csvData$interface == "Cat Inline" | csvData$interface == "Cat Hover" | csvData$interface == "Cat w/o Names" | csvData$interface == "Cat Browse",]
listData <- csvData[csvData$interface == "List Inline" | csvData$interface == "List Hover" | csvData$interface == "List w/ CatNames",]
timePerTaskList <- aggregate(time ~ task, data=listData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task, data=categoryData, FUN=mean)
timePerTaskList$categoryTime <- timePerTaskCategory$time
View(timePerTaskList)
timePerTaskList <- aggregate(time ~ task * interface, data=listData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task * interface, data=categoryData, FUN=mean)
View(timePerTaskList)
View(csvData)
View(csvData)
timePerTaskList <- aggregate(time ~ task * interface, data=listData, FUN=median)
timePerTaskCategory <- aggregate(time ~ task * interface, data=categoryData, FUN=median)
View(timePerTaskCategory)
View(timePerTaskList)
timePerTaskList <- aggregate(time ~ task, data=listData, FUN=median)
timePerTaskCategory <- aggregate(time ~ task, data=categoryData, FUN=median)
timePerTaskList <- aggregate(time ~ task * interface, data=listData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task * interface, data=categoryData, FUN=)
timePerTaskList <- aggregate(time ~ task * interface, data=listData, FUN=mean)
timePerTaskCategory <- aggregate(time ~ task * interface, data=categoryData, FUN=mean)
ggplot(csvData, aes(interface, time)) + geom_bar(fill="transparent", colour="red", data = csvData, aes(isCategory, mean(time)), stat = "identity")
csvData$isCategory[csvData$interface == "Cat Inline" | csvData$interface == "Cat Hover" | csvData$interface == "Cat w/o Names" | csvData$interface == "Cat Browse"] <- 1
csvData$isCategory[csvData$interface == "List Inline" | csvData$interface == "List Hover" | csvData$interface == "List w/ CatNames"] <- 0
ggplot(csvData, aes(interface, time)) + geom_bar(fill="transparent", colour="red", data = csvData, aes(isCategory, mean(time)), stat = "identity")
ggplot(csvData, aes(interface, time)) + geom_bar(data = csvData, aes(isCategory, mean(time)), stat = "identity")
csvData$isCategory[csvData$interface == "Cat Inline" | csvData$interface == "Cat Hover" | csvData$interface == "Cat w/o Names" | csvData$interface == "Cat Browse"] <- "Category"
csvData$isCategory[csvData$interface == "List Inline" | csvData$interface == "List Hover" | csvData$interface == "List w/ CatNames"] <- "List"
ggplot(csvData, aes(interface, time)) + geom_bar(data = csvData, aes(isCategory, mean(time)), stat = "identity")
ggplot(csvData, aes(interface, time)) + geom_bar(data = csvData, aes(isCategory, time), stat = "identity", fun.y="mean")
ggplot(csvData, aes(isCategory, time)) + geom_bar(data = csvData, aes(isCategory, time), stat = "identity", fun.y="mean")
ggplot(csvData) + geom_bar(data = csvData, aes(isCategory, time), stat = "identity", fun.y="mean")
ggplot(csvData) + geom_bar(data = csvData, aes(isCategory, time), fun.y="mean")
ggplot(csvData) + geom_bar(data = csvData, aes(isCategory, time), stat = "summary", fun.y="mean")
ggplot(csvData) + geom_bar(data = csvData, aes(isCategory, time), position = "dodge", stat = "summary", fun.y="mean")
ggplot(aes(isCategory, time)) + geom_bar(data = csvData, aes(isCategory, time), stat = "summary", fun.y="mean")
ggplot(csvData, aes(isCategory, time)) + geom_bar(data = csvData, aes(isCategory, time), stat = "summary", fun.y="mean")
ggplot(csvData, aes(isCategory, time)) +
geom_bar(data = csvData, aes(isCategory, time), stat = "summary", fun.y="mean") +
xlabel('Type')
ggplot(csvData, aes(isCategory, time)) +
geom_bar(data = csvData, aes(isCategory, time), stat = "summary", fun.y="mean") +
xlab('Type')
ggplot(csvData, aes(isCategory, time)) +
geom_bar(data = csvData, aes(isCategory, time), stat = "summary", fun.y="mean") +
xlab('Interface Type') +
ylab('Mean Time')
listHover <- csvData[csvData$interface == "List Hover",]
t.test(listHover$hover, catHover$hover)
t.test(listHover$clicks, catHover$click)
t.test(listHover$click, catHover$click)
finalStatusMeans <- aggregate(status ~ interface, data = meansByInterface, FUN=mean)
View(finalStatusMeans)
ggplot(csvData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 50)
auxData <- csvData
auxData$time <- log(auxData$time)
finalTimeMeans$time <- log(finalTimeMeans$time)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 50)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5)
csvData$time <- log(csvData$time)
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$isCategory[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$isCategory[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
truncData$isCategory <- factor(truncData$isCategory, levels=c(0:1), labels=c("No", "Yes"))
truncData$isHover <- factor(truncData$isHover, levels=c(0:1), labels=c("No", "Yes"))
linearModel <- aov(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModel)
summary(linearModel)
truncData <- csvData[csvData$interface == "Cat Inline" | csvData$interface == "List Inline" | csvData$interface == "List w/ CatNames",]
catNames <- csvData[csvData$interface == "List w/ CatNames",]
listInline <- csvData[csvData$interface == "List Inline",]
catInline <- csvData[csvData$interface == "Cat Inline",]
noCatNames <- csvData[csvData$interface == "Cat w/o Names",]
catHover <- csvData[csvData$interface == "Cat Hover",]
listHover <- csvData[csvData$interface == "List Hover",]
catBrowse <- csvData[csvData$interface == "Cat Browse",]
t.test(catNames$time, listInline$time)
t.test(catNames$time, catInline$time)
t.test(noCatNames$time, catHover$time)
t.test(noCatNames$time, listInline$time)
t.test(catBrowse$time, catInline$time)
t.test(catBrowse$time, catNames$time, paired = TRUE)
anova(linearModel)
summary(linearModel)
t.test(csvData[csvData$isCategory == 'Yes']$time, csvData[csvData$isCategory == 'No']$time)
csvData[csvData$isCategory == 'Yes']$time
csvData[csvData$isCategory == 'Yes']
categoryData <- csvData[csvData$isCategory == 'Yes']
View(categoryData)
View(categoryData)
t.test(truncData[truncData$isCategory == 'Yes']$time, truncData[truncData$isCategory == 'No']$time)
truncData[truncData$isCategory == 'Yes']
View(truncData)
View(truncData)
csvData$time <- log(csvData$time)
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$isCategory[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$isCategory[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
truncData$isCategory <- factor(truncData$isCategory, levels=c(0:1), labels=c("No", "Yes"))
truncData$isHover <- factor(truncData$isHover, levels=c(0:1), labels=c("No", "Yes"))
linearModel <- aov(time ~ isCategory * isHover * gender, data=truncData)
View(truncData)
View(truncData)
linearModel <- aov(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModel)
summary(linearModel)
View(truncData)
linearModel <- aov(time ~ isCategory * isHover * gender, data=truncData)
View(truncData)
csvData <- read.csv(file = "dataset.csv", header=TRUE, sep = ",")
csvData$interface[csvData$experiment == 1 & csvData$task <= 7] <- 1
csvData$interface[csvData$experiment == 1 & csvData$task > 7] <- 2
csvData$interface[csvData$experiment == 2 & csvData$task <= 7] <- 1
csvData$interface[csvData$experiment == 2 & csvData$task > 7] <- 3
csvData$interface[csvData$experiment == 3 & csvData$task <= 7] <- 4
csvData$interface[csvData$experiment == 3 & csvData$task > 7] <- 5
csvData$interface[csvData$experiment == 4 & csvData$task <= 7] <- 6
csvData$interface[csvData$experiment == 4 & csvData$task > 7] <- 7
csvData$interface<-factor(csvData$interface, levels = c(1:7),
labels = c("Cat Hover","List Hover", "List Inline", "Cat Inline", "Cat w/o Names", "List w/ CatNames", "Cat Browse"))
csvData$time <- log(csvData$time)
View(csvData)
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$isCategory[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$isCategory[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
truncData$isCategory <- factor(truncData$isCategory, levels=c(0:1), labels=c("No", "Yes"))
truncData$isHover <- factor(truncData$isHover, levels=c(0:1), labels=c("No", "Yes"))
linearModel <- aov(time ~ isCategory * isHover * gender, data=truncData)
anova(linearModel)
summary(linearModel)
t.test(truncData[truncData$isCategory == 'Yes']$time, truncData[truncData$isCategory == 'No']$time)
View(truncData)
truncData[truncData$isCategory == "Yes"]
View(truncData)
truncData$isCategory
truncData[truncData$isCategory == "YES"]
truncData[truncData$isCategory == "Yes"]
View(truncData)
aux <- truncData[truncData$isCategory == "Yes"]
View(truncData)
truncData[truncData$isCategory == 0]
truncData[truncData$isCategory == 1]
truncData[truncData$isCategory == "Yes"]
truncData[truncData$isCategory == 'Yes']
truncData <- csvData[csvData$interface == "Cat Hover" | csvData$interface == "Cat Inline" | csvData$interface == "List Hover" | csvData$interface == "List Inline",]
truncData$isCategory[truncData$interface == "Cat Hover" | truncData$interface == "Cat Inline"] <- 1
truncData$isCategory[truncData$interface == "List Hover" | truncData$interface == "List Inline"] <- 0
truncData$isHover[truncData$interface == "Cat Hover" | truncData$interface == "List Hover"] <- 1
truncData$isHover[truncData$interface == "Cat Inline" | truncData$interface == "List Inline"] <- 0
truncData[truncData$isCategory == 1]
truncData[truncData$isCategory == "Yes",]
truncData$isCategory <- factor(truncData$isCategory, levels=c(0:1), labels=c("No", "Yes"))
truncData$isHover <- factor(truncData$isHover, levels=c(0:1), labels=c("No", "Yes"))
truncData[truncData$isCategory == "Yes",]
t.test(truncData[truncData$isCategory == "Yes",]$time, truncData[truncData$isCategory == 'No',]$time)
summary(linearModel)
t.test(truncData[truncData$isHover == "Yes",]$time, truncData[truncData$isHover == 'No',]$time)
t.test(truncData[truncData$isHover == "Yes" & truncData$gender == "Male",]$time, truncData[truncData$isHover == "Yes" & truncData$gender == "Female",]$time)
t.test(truncData[truncData$isHover == "Yes" & truncData$gender == "Male",]$time, truncData[truncData$isHover == "Yes" & truncData$gender == "Female",]$time)
t.test(truncData[truncData$isHover == "No" & truncData$gender == "Male",]$time, truncData[truncData$isHover == "No" & truncData$gender == "Female",]$time)
t.test(truncData[truncData$isHover == "No" & truncData$gender == "Male",]$time, truncData[truncData$isHover == "Yes" & truncData$gender == "Male",]$time)
length(csvData[csvData$gender == "Male", ])
length(csvData[csvData$gender == "Female", ])
csvData[csvData$gender == "Female",]
csvData[csvData$gender == "Male", ]
nrow(csvData[csvData$gender == "Male", ])
nrow(csvData[csvData$gender == "Female",])
aggregate(gender ~ user, data = csvData, FUN=sum)
aggregate(gender ~ user, data = csvData, FUN=count)
aggregate(gender ~ user, data = csvData, FUN=length)
View(csvData)
View(csvData)
aggregate(user ~ gender, data = csvData, FUN=length)
t.test(noCatNames$time, catInline$time)
t.test(noCatNames$time, listInline$time, paired=TRUE)
t.test(noCatNames$time, listInline$time, paired=TRUE)
t.test(noCatNames$time, catInline$time, paired=TRUE)
View(csvData)
t.test(noCatNames[noCatNames$user != 10]$time, catInline[catInline$user != 13]$time, paired=TRUE)
t.test(noCatNames[noCatNames$user != 10,]$time, catInline[catInline$user != 10,]$time, paired=TRUE)
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time")
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
theme(axis.text.x = element_text(size= 5, angle=90, hjust=1))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
ggtitle("Mean search time by interface") +
theme(axis.text.x = element_text(size= 5, hjust=1))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=7), axis.text.x = element_text(size= 5, hjust=1))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=7), axis.text.x = element_text(size= 5, hjust=1), plot.title = element_text(hjust = 0.5))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=7), axis.text.x = element_text(size= 7, hjust=0.5), plot.title = element_text(hjust = 0.5))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=9), axis.text.x = element_text(size= 8, hjust=0.5), plot.title = element_text(hjust = 0.5))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=9), axis.text.x = element_text(size= 7, hjust=0.5), plot.title = element_text(hjust = 0.5))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
xlab("Interface Type")
ggtitle("Mean search time by interface") +
theme(text = element_text(size=9), axis.text.x = element_text(size= 7, hjust=0.5, margin = margin(t = 3, r = 0, b = 0, l = 0)), plot.title = element_text(hjust = 0.5))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
xlab("Interface Type")
ggtitle("Mean search time by interface") +
theme(text = element_text(size=9), axis.text.x = element_text(size= 7, hjust=0.5), plot.title = element_text(hjust = 0.5))
dev.off()
csvData$time <- log(csvData$time)
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
xlab("Interface Type")
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
xlab("Interface Type") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=9), axis.text.x = element_text(size= 7, hjust=0.5), plot.title = element_text(hjust = 0.5))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
xlab("Interface Type") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=9), axis.text.x = element_text(size= 7, hjust=0.5, margin = margin(t = 3)), plot.title = element_text(hjust = 0.5))
dev.off()
png(file="mean_times_log.png", width = 1920, height = 1080, res=300)
ggplot(auxData, aes(interface, time)) +
geom_boxplot() +
geom_bar(fill="transparent", colour="red", data = finalTimeMeans, aes(interface, time), stat = "identity") +
ylim(0, 5) +
ylab("Mean log search time") +
xlab("Interface Type") +
ggtitle("Mean search time by interface") +
theme(text = element_text(size=9), axis.text.x = element_text(size= 7, hjust=0.5, margin = margin(t = 3, b = 3)), plot.title = element_text(hjust = 0.5))
dev.off()
csvData <- read.csv(file = "dataset.csv", header=TRUE, sep = ",")
csvData$interface[csvData$experiment == 1 & csvData$task <= 7] <- 1
csvData$interface[csvData$experiment == 1 & csvData$task > 7] <- 2
csvData$interface[csvData$experiment == 2 & csvData$task <= 7] <- 1
csvData$interface[csvData$experiment == 2 & csvData$task > 7] <- 3
csvData$interface[csvData$experiment == 3 & csvData$task <= 7] <- 4
csvData$interface[csvData$experiment == 3 & csvData$task > 7] <- 5
csvData$interface[csvData$experiment == 4 & csvData$task <= 7] <- 6
csvData$interface[csvData$experiment == 4 & csvData$task > 7] <- 7
finalTimeMeans$time
View(finalMeans)
finalTimeMeans <- aggregate(time ~ interface, data = csvData, FUN=mean)
finalTimeMeans$time
View(finalTimeMeans)
